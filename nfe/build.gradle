buildscript {
	ext {
        springBootVersion = '1.2.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
  id 'net.researchgate.release' version '2.0.2'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'maven'

group = 'com.hadrion'
version = '0.0.1-SNAPSHOT'

description = "NF-e"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "http://repo.spring.io/libs-release"  }
	maven { url "http://jaspersoft.artifactoryonline.com/jaspersoft/repo"}
}

dependencies {
    compile group: 'com.oracle', name: 'ojdbc6', version:'11.2.0'
    
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-tomcat")
    compile("org.springframework.boot:spring-boot-starter-amqp")
    compile("org.springframework.boot:spring-boot-starter-ws")
    compile("org.springframework.boot:spring-boot-starter-mail")
    //compile("org.springframework.boot:spring-boot-starter-security")

    compile group: 'com.google.code.gson', name: 'gson', version:'2.1'
    compile group: 'commons-io', name: 'commons-io', version:'2.3'
    compile group: 'commons-lang', name: 'commons-lang', version:'2.3'
	compile("com.thoughtworks.xstream:xstream:1.4.7")
	compile("joda-time:joda-time:2.4")
	compile("org.apache.httpcomponents:httpclient:4.3.5")
	compile("org.springframework:springloaded:1.2.1.RELEASE")
	
    compile('net.sf.jasperreports:jasperreports:5.6.1')
	compile('com.lowagie:itext:4.2.1')
	compile('xalan:xalan:2.7.2')
	compile('net.sourceforge.barbecue:barbecue:1.5-beta1')	
	compile "net.sf.jasperreports:jasperreports-fonts:5.6.1"
	
    compile("com.h2database:h2")

	compile('xmlunit:xmlunit:1.4')
    testCompile("org.springframework.boot:spring-boot-starter-test")
    
}

ext.priv = parseConfig(file('private.properties'))

def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}

test {
    systemProperties 'property': 'value'
}

ant.importBuild('src/main/resources/public/build.xml') { antTaskName -> 
	"sencha-"+antTaskName
}

tasks.matching { task ->
	task.name.startsWith('sencha-')
}*.group = 'Sencha'

task copyPublicToExtjs(type: Copy, dependsOn: processResources) {
	from "${rootDir}/src/main/resources/public/build/production/nfe"
	into "${buildDir}/extjs"
}

task deleteExtjsResources(type: Delete, dependsOn:copyPublicToExtjs) {
   delete "${buildDir}/resources/main/public"
}

task copyExtjsToPublic(type: Copy, dependsOn:deleteExtjsResources) {
	from "${buildDir}/extjs"
	into "${buildDir}/resources/main/public"
}

task customJar(type: Jar, dependsOn: copyExtjsToPublic) {
	destinationDir = file("${buildDir}/jars")
	from sourceSets.main.output
}

configurations {
    ftpAntTask
}

dependencies {
    ftpAntTask("org.apache.ant:ant-commons-net:1.8.4") {
        module("commons-net:commons-net:1.4.1") {
            dependencies "oro:oro:2.0.8:jar"
        }
    }
}

task ftp << {
    ant {
        taskdef(name: 'ftp',
                classname: 'org.apache.tools.ant.taskdefs.optional.net.FTP',
                classpath: configurations.ftpAntTask.asPath)
        ftp(server: priv.ftp.server, 
        	remoteDir: priv.ftp.remoteDir,
        	userid: priv.ftp.user, 
        	password: priv.ftp.pass, 
        	passive:"yes") {
            fileset(dir: "${buildDir}/jars") {
                include(name: "*.jar")
            }
        }
        
    }
}

install {
    repositories.mavenInstaller {
        pom.project {
          parent { 
            groupId 'org.springframework.boot'
            artifactId 'spring-boot-starter-parent'
            version "${springBootVersion}"
          }
        }
    }
}

uploadArchives {
	repositories {
	   mavenDeployer {
			repository(url: priv.host) {
				authentication(
					userName: priv.user, password: priv.pass
				)
			}
			pom.project {
	          parent { 
	            groupId 'org.springframework.boot'
	            artifactId 'spring-boot-starter-parent'
	            version "${springBootVersion}"
	          }
	        }
	   }
	}
}



